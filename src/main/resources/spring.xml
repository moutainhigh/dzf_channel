<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xmlns:context="http://www.springframework.org/schema/context" xmlns:tx="http://www.springframework.org/schema/tx" xmlns:aop="http://www.springframework.org/schema/aop" xsi:schemaLocation="
http://www.springframework.org/schema/beans 
http://www.springframework.org/schema/beans/spring-beans-3.0.xsd 
http://www.springframework.org/schema/tx 
http://www.springframework.org/schema/tx/spring-tx-3.0.xsd
http://www.springframework.org/schema/aop 
http://www.springframework.org/schema/aop/spring-aop-3.0.xsd
http://www.springframework.org/schema/context 
http://www.springframework.org/schema/context/spring-context-3.0.xsd
">
	<!-- 引入属性文件 -->
	<context:property-placeholder location="classpath:config.properties" />
<bean id="dataSource" class="com.dzf.dao.pub.DZFDruidDataSourceXA"
        init-method="init" destroy-method="close">
       
     <property name="url" value="${jdbc_url}" />
		<property name="username" value="${jdbc_username}" />
		<property name="password" value="${jdbc_password}" />
		
		<!-- 初始化连接大小 -->
		<property name="initialSize" value="0" />
		<!-- 连接池最大使用连接数量 -->
		<property name="maxActive" value="200" />
		<!-- 连接池最大空闲 -->
		<property name="maxIdle" value="20" />
		<!-- 连接池最小空闲 -->
		<property name="minIdle" value="0" />
		<!-- 获取连接最大等待时间 -->
		<property name="maxWait" value="60000" />

		<!-- <property name="poolPreparedStatements" value="true" /> <property name="maxPoolPreparedStatementPerConnectionSize" value="33" /> -->

		<property name="validationQuery" value="${validationQuery}" />
		<property name="testOnBorrow" value="false" />
		<property name="testOnReturn" value="false" />
		<property name="testWhileIdle" value="true" />

		<!-- 配置间隔多久才进行一次检测，检测需要关闭的空闲连接，单位是毫秒 -->
		<property name="timeBetweenEvictionRunsMillis" value="60000" />
		<!-- 配置一个连接在池中最小生存的时间，单位是毫秒 -->
		<property name="minEvictableIdleTimeMillis" value="25200000" />

		<!-- 打开removeAbandoned功能 -->
		<property name="removeAbandoned" value="false" />
		<!-- 1800秒，也就是30分钟 -->
		<property name="removeAbandonedTimeout" value="60" />
		<!-- 关闭abanded连接时输出错误日志 -->
		<property name="logAbandoned" value="true" />

		<!-- 监控数据库 -->
		<!-- <property name="filters" value="stat" /> -->
		<property name="filters" value="mergeStat" />
 </bean>



	<bean id="transactionManager" 
	class="org.springframework.jdbc.datasource.DataSourceTransactionManager"> 
		<property name="dataSource"> 
		<ref bean="dataSource" /> 
		</property> 
	</bean>
	
	<bean id="beanUtil" 
		class="com.dzf.spring.BeanUtils"> 
	</bean>  
  
    <!-- 配置事务传播特性 -->  
    <tx:advice id="transactionAdvice" transaction-manager="transactionManager">  
      <tx:attributes>
			<tx:method name="add*" />
			<tx:method name="save*" />
			<tx:method name="update*" />
			<tx:method name="modify*" />
			<tx:method name="edit*" />
			<tx:method name="delete*" />
			<tx:method name="remove*" />
			<tx:method name="repair" />
			<tx:method name="deleteAndRepair" />
			<tx:method name="insert*" />
			<tx:method name="imp*" />

			<tx:method name="get*" propagation="SUPPORTS" /><!-- 不应用事务 -->
			<tx:method name="find*" propagation="SUPPORTS" />
			<tx:method name="load*" propagation="SUPPORTS" />
			<tx:method name="search*" propagation="SUPPORTS" />
			<tx:method name="datagrid*" propagation="SUPPORTS" />

			<tx:method name="*" propagation="SUPPORTS" />
		</tx:attributes>
    </tx:advice>  
  
    <!-- 配置相关类的方法参与事务 -->  
    	<aop:config>
		<aop:pointcut id="transactionPointcut" expression="execution(* com.dzf.service..*Impl.*(..))" />
		<aop:advisor pointcut-ref="transactionPointcut" advice-ref="transactionAdvice" />
	</aop:config>
	
	<bean id="apputil" class="com.dzf.spring.SpringUtils"></bean>
	
	<!-- 配置图片服务器-->
	<bean name="connectionPool" class="com.dzf.file.fastdfs.FastDfsUtil"  init-method="init">  
        <property name="minPoolSize" value="20" />  
        <property name="maxPoolSize" value="50" />  
        <property name="waitTimes" value="400" />  
    </bean>  
	
	<!-- 用于持有ApplicationContext,可以使用SpringContextHolder.getBean('xxxx')的静态方法得到spring bean对象 -->  
	<bean class="com.dzf.spring.SpringContextHolder" lazy-init="false" /> 
 
	<!-- 自动扫描dao和service包(自动注入) -->
	<context:component-scan base-package="com.dzf.dao,com.dzf.service,com.dzf.cache" />
	
	
</beans>